[{"G:\\Educational Material\\ReactCourse\\quizapp\\src\\index.js":"1","G:\\Educational Material\\ReactCourse\\quizapp\\src\\App.js":"2","G:\\Educational Material\\ReactCourse\\quizapp\\src\\Questions.js":"3"},{"size":197,"mtime":1609358429823,"results":"4","hashOfConfig":"5"},{"size":2769,"mtime":1609614516432,"results":"6","hashOfConfig":"5"},{"size":1290,"mtime":1609444081672,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"gz4xgv",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"G:\\Educational Material\\ReactCourse\\quizapp\\src\\index.js",[],["17","18"],"G:\\Educational Material\\ReactCourse\\quizapp\\src\\App.js",["19"],"import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\nimport Questions from './Questions';\n\nconst API_URL = `https://opentdb.com/api.php?amount=6&category=18&difficulty=easy&type=multiple`\n\nfunction App() {\n\n  const [questions, setQuestions] = useState([])\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [score, setScore] = useState(0)\n  const [showResult, setShowResult] = useState(false)\n  const [showAnswers, setShowAnswers] = useState(false)\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        const questions = data.results.map((question) => \n        ({\n          ...question,\n          answers: [\n            question.correct_answer,\n            ...question.incorrect_answers,\n          ].sort(() => Math.random() - 0.5),\n        }))\n\n        setQuestions(questions)\n        // console.log(questions)\n      })\n  },[])\n\n  // console.log(`This is Console ${questions}`)\n\n  const handleAnswer = (answer) => {\n    if (!showAnswers){\n      if (answer === questions[currentIndex].correct_answer){\n        setScore(score + 1)\n      }\n    }\n    setShowAnswers(true)\n  }\n\n  const handleNxtQst = () => {\n    setShowAnswers(false)\n    setCurrentIndex(currentIndex + 1)\n  }\n\n  const PlayAGAIN = () =>{\n    setScore(0)\n    setShowResult(false)\n    setCurrentIndex(0)\n    window.location.reload()\n    // console.log('Play AGain call')\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App--title\">QuizApP</h1>\n      {questions.length > 0 ? (\n          currentIndex >= questions.length  ? (\n            <div className=\"Result--box\">\n              {score > 3 ? (\n                <h1 className=\"win\">!!Congrats!!</h1>\n              ) : (\n                <h1 className=\"lose\">!Try Again!</h1>\n              )}\n              <h2>Correct Answers are <span className=\"result--score\">{score}</span> Out of {questions.length}</h2>\n              <button className=\"playagn--btn\" onClick={() => PlayAGAIN()}>Play AGAIN</button>\n            </div>\n          ) : (\n              <Questions \n                key={currentIndex}\n                Index={currentIndex}\n                Qstlength={questions.length}\n                data={questions[currentIndex]}\n                showAnswers={showAnswers}\n                handleAnswer={handleAnswer}\n                handleNxtQst={handleNxtQst}\n              />\n          )) : (\n            <Loader\n                className=\"Loading\" \n                type=\"Bars\" \n                color=\"#00BFFF\" \n                height={100} \n                width={100} \n                timeout={3000} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","G:\\Educational Material\\ReactCourse\\quizapp\\src\\Questions.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":14,"column":10,"nodeType":"28","messageId":"29","endLine":14,"endColumn":20},{"ruleId":"22","replacedBy":"30"},{"ruleId":"24","replacedBy":"31"},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'showResult' is assigned a value but never used.","Identifier","unusedVar",["32"],["33"],"no-global-assign","no-unsafe-negation"]